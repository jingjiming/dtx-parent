spring:
  application:
    name: discovery-server

server:
  port: 56080
  servlet:
    context-path: /${spring.application.name}

eureka:
  instance:
    hostname: localhost
    # 默认情况下，Eureka 使用 hostname 进行服务注册，以及服务信息的显示，此处使用IP地址注册方式
    prefer-ip-address: true
    # 续约更新时间间隔,表示eureka间隔多久去拉取服务注册信息，默认为30秒
    lease-renewal-interval-in-seconds: 5
    # 续约到期时间,表示eureka至上一次收到心跳之后，等待下一次心跳的超时时间，在这个时间内没收到下一次心跳，则将移除该instance（默认90秒）
    lease-expiration-duration-in-seconds: 10
    # instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/${spring.application.name}/eureka/
    # false:不作为一个客户端注册到注册中心
    register-with-eureka: false
    # false:表示不从注册中心获取注册信息 为true时,可以启动，但报异常：Cannot execute request on any known server
    fetch-registry: false
    instance-info-replication-interval-seconds: 10
  server:
    # 关闭服务器自我保护机制（默认true开启），客户端心跳检测15分钟内错误达到80%服务会保护，导致别人还认为是好用的服务
    enable-self-preservation: true
    # 清理间隔（单位毫秒，默认是60*1000）5秒将客户端剔除的服务在服务注册列表中剔除#
    eviction-interval-timer-in-ms: 10000
    # eureka是CAP理论中基于AP策略，为了保证强一致性关闭此切换CP 默认不关闭 false关闭
    shouldUseReadOnlyResponseCache: true
    # eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上 默认30s
    response-cache-update-interval-ms: 3000
    # eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
    response-cache-auto-expiration-in-seconds: 180
